% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_bills.R
\name{all_bills}
\alias{all_bills}
\alias{legco_all_bills}
\title{All Bills in LegCo}
\usage{
all_bills(
  id = NULL,
  ordinance = NULL,
  title = NULL,
  proposer = NULL,
  gazette_from = "all",
  gazette_to = "all",
  first_from = "all",
  first_to = "all",
  second_from = "all",
  second_to = "all",
  third_from = "all",
  third_to = "all",
  n = 10000,
  extra_param = NULL,
  count = FALSE,
  verbose = TRUE
)

legco_all_bills(
  id = NULL,
  ordinance = NULL,
  title = NULL,
  proposer = NULL,
  gazette_from = "all",
  gazette_to = "all",
  first_from = "all",
  first_to = "all",
  second_from = "all",
  second_to = "all",
  third_from = "all",
  third_to = "all",
  n = 10000,
  extra_param = NULL,
  count = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{id}{The id of a bill, or a vector of ids. Defaults to `NULL`.}

\item{ordinance}{The ordinance associated with the bill. Takes the full
English name of the ordinanace, e.g. `Buildings Ordinanace`. Defaults to
`NULL`.}

\item{title}{The title of the bill. Takes the full English name of the bill,
e.g. `National Anthem Bill`. Defaults to `NULL`.}

\item{proposer}{The proposer of the bill. Takes the full English title of the
proposer, e.g. `Secretary for Security`. Defaults to `NULL`.}

\item{gazette_from}{Only fetch bills gazetted on or after this date. Accepts
`'all'`, `NULL` or character values in `'YYYY-MM-DD'` format, and objects
of class `Date`, `POSIXt`, `POSIXct`, `POSIXlt` or anything else that can
be coerced to a date with `as.Date()`. If `'all'`, returns all bills that
have and have not been gazetted before being tabled in LegCo and overrides
the `gazette_to` parameter. If `NULL`, returns bills that have not been
gazetted before being tabled in LegCo (mainly older bills as newer ones
required to be gazetted before tabling as required by the Rules of
Procedure) and overrides the `gazette_to` parameter. Defaults to `'all'`.}

\item{gazette_to}{Only fetch bills gazetted on or before this date. Accepts
`'all'`, `NULL` or character values in `'YYYY-MM-DD'` format, and objects
of class `Date`, `POSIXt`, `POSIXct`, `POSIXlt` or anything else that can
be coerced to a date with `as.Date()`. If `'all'`, returns all bills that
have and have not been gazetted before being tabled in LegCo and overrides
the `gazette_from` parameter. If `NULL`, returns bills that have not been
gazetted before being tabled in LegCo (mainly older bills as newer ones
required to be gazetted before tabling as required by the Rules of
Procedure) and overrides the `gazette_from` parameter. Defaults to `'all'`.}

\item{first_from}{Only fetch bills that have gone through first reading on or
after this date. Accepts `'all'`, `NULL` or character values in
`'YYYY-MM-DD'` format, and objects of class `Date`, `POSIXt`, `POSIXct`,
`POSIXlt` or anything else that can be coerced to a date with `as.Date()`.
If `'all'`, returns all bills that have and have not gone through first
reading and overrides the `first_to` parameter. If `NULL`, returns bills
that have not gone through first reading and overrides the `first_to`
parameter. Defaults to `'all'`.}

\item{first_to}{Only fetch bills that have gone through first reading on or
before this date. Accepts `'all'`, `NULL` or character values in
`'YYYY-MM-DD'` format, and objects of class `Date`, `POSIXt`, `POSIXct`,
`POSIXlt` or anything else that can be coerced to a date with `as.Date()`.
If `'all'`, returns all bills that have and have not gone through first
reading and overrides the `first_from` parameter. If `NULL`, returns bills
that have not gone through first reading and overrides the `first_from`
parameter. Defaults to `'all'`.}

\item{second_from}{Only fetch bills that have gone through second reading on
or after this date. Accepts `'all'`, `NULL` or character values in
`'YYYY-MM-DD'` format, and objects of class `Date`, `POSIXt`, `POSIXct`,
`POSIXlt` or anything else that can be coerced to a date with `as.Date()`.
If `'all'`, returns all bills that have and have not gone through second
reading and overrides the `second_to` parameter. If `NULL`, returns bills
that have not gone through second reading and overrides the `second_to`
parameter. Defaults to `'all'`.}

\item{second_to}{Only fetch bills that have gone through second reading on or
before this date. Accepts `'all'`, `NULL` or character values in
`'YYYY-MM-DD'` format, and objects of class `Date`, `POSIXt`, `POSIXct`,
`POSIXlt` or anything else that can be coerced to a date with `as.Date()`.
If `'all'`, returns all bills that have and have not gone through second
reading and overrides the `second_from` parameter. If `NULL`, returns bills
that have not gone through second reading and overrides the `second_from`
parameter. Defaults to `'all'`.}

\item{third_from}{Only fetch bills that have gone through third reading on or
after this date. Accepts `'all'`, `NULL` or character values in
`'YYYY-MM-DD'` format, and objects of class `Date`, `POSIXt`, `POSIXct`,
`POSIXlt` or anything else that can be coerced to a date with `as.Date()`.
If `'all'`, returns all bills that have and have not gone through third
reading and overrides the `third_to` parameter. If `NULL`, returns bills
that have not gone through third reading and overrides the `third_to`
parameter. Defaults to `'all'`.}

\item{third_to}{Only fetch bills that have gone through third reading on or
before this date. Accepts `'all'`, `NULL` or character values in
`'YYYY-MM-DD'` format, and objects of class `Date`, `POSIXt`, `POSIXct`,
`POSIXlt` or anything else that can be coerced to a date with `as.Date()`.
If `'all'`, returns all bills that have and have not gone through third
reading and overrides the `third_from` parameter. If `NULL`, returns bills
that have not gone through third reading and overrides the `third_from`
parameter. Defaults to `'all'`.}

\item{n}{The number of record to fetch. Defaults to `1000`.}

\item{extra_param}{Additional query parameters defined in LegCo API. Must
begin with `'&'`.}

\item{count}{If `TRUE`, returns only the total count of records that matches
the paramter(s) instead of the result. Defaults to `FALSE`.}

\item{verbose}{Defaults to `TRUE`.}
}
\description{
Fetch the information of bills presented in LegCo since 1906.
}
\examples{
\dontrun{
# Fetch bills that passed third reading on February 20, 2019
all_bills(third_from = "2019-02-20")
}

}
